/*
 * Copyright (c) 2014 Dufresne Management Consulting LLC.
 */
package com.nickelsoftware.bettercare4me.hedis.hedis2014

import org.joda.time.DateTime

import com.nickelsoftware.bettercare4me.hedis.Scorecard
import com.nickelsoftware.bettercare4me.models.Claim
import com.nickelsoftware.bettercare4me.models.Patient
import com.nickelsoftware.bettercare4me.models.PatientHistory
import com.nickelsoftware.bettercare4me.models.PersistenceLayer
import com.nickelsoftware.bettercare4me.models.Provider
import com.nickelsoftware.bettercare4me.models.RuleConfig

object MPM_AC {

  val nameC =  "MPM-AC-Carbamazepine-HEDIS-2014"
  val nameP1 = "MPM-AC-Phenobarbital-HEDIS-2014"
  val nameP2 = "MPM-AC-Phenytoin-HEDIS-2014"
  val nameV =  "MPM-AC-Valproic-HEDIS-2014"
  
  // NDC Anticonvulsants -- MPM-C
  // ----------------------------
  // NDC - carbamazepine
  val ndcC = List("00078049205", "00078049235", "00078049261", "00078050883", "00078050905", "00078051005", "00078051105", "00078051205", "00083002732", "00083002740", "00093009001", "00093010901", "00093010910", "00093077801", "00093123319", "00093123393", "00093551289", "00093551389", "00093551489", "00182133100", "00182133189", "00228214310", "00228214350", "00228214396", "00247035201", "00247035203", "00247035204", "00247035206", "00247035208", "00247035209", "00247035210", "00247035216", "00247035290", "00247123100", "00781508701", "00781508801", "00781598701", "00781598801", "00904385461", "00904385561", "00904617261", "13668026801", "13668026805", "13668026810", "13668027101", "13668027105", "16590047530", "16590047560", "16590047572", "16590047590", "23490520001", "29033000412", "29033001912", "29033002012", "30698041912", "30698042112", "30698042312", "43063032812", "49158050401", "49158050410", "49158050450", "49999061600", "49999061601", "49999061660", "49999078201", "49999078260", "51079038501", "51079038517", "51079038519", "51079038520", "51079087001", "51079087020", "51655095327", "51672400501", "51672400502", "51672400503", "51672404101", "51672404102", "51672404709", "51672412401", "51672412501", "52446007528", "52959017400", "54092017112", "54092017212", "54092017312", "54569016301", "54569016502", "54569265500", "54569265501", "54569265503", "54569265505", "54569279501", "54868014700", "54868014701", "54868014702", "54868014704", "54868014705", "54868014706", "54868123501", "54868123503", "54868197500", "54868246201", "54868246202", "54868246203", "54868386200", "54868406700", "54868406701", "54868543200", "54868561000", "54868561001", "55045208808", "55045302701", "55289021030", "55887034530", "57664034213", "57664034288", "57664053313", "57664053318", "57664053388", "57866341501", "57866341502", "57866341503", "57866341504", "58016050100", "58016050110", "58016050115", "58016050120", "58016050130", "58016050140", "58016050160", "58016050190", "58016096800", "58016096802", "58016096830", "58016096860", "58016096890", "58864063128", "58864078830", "58864084330", "60429012045", "60429093201", "60429093210", "60429093405", "60432012916", "60505018300", "60505018301", "60505018305", "60505280507", "60505280607", "60505280707", "61392003834", "61392003845", "61392003856", "61392003891", "61392009730", "61392009731", "61392009732", "61392009739", "61392009745", "61392009751", "61392009754", "61392009760", "61392009790", "61392009791", "62584063901", "62584063911", "63739004501", "63739004503", "63739004510", "63874049201", "63874049202", "63874049204", "63874049210", "63874049220", "63874049230", "63874049240", "63874049245", "63874049260", "63874049290", "66336073130", "66689032301", "66689032350", "66993040732", "66993040832", "66993040932", "67544024253", "68084056111", "68084056121", "68084056211", "68084056221", "68094021459", "68094021462", "68094030159", "68094030162")
  val ndcCS = ndcC.toSet
  
  val cptC = List("80156", "80157")
  val cptCS = cptC.toSet
  
  // NDC - phenobarbital
  val ndcP1 = List("00121053105", "00121053107", "00121053115", "00121053116", "00143144505", "00143144510", "00143145005", "00143145010", "00143145505", "00143145510", "00143145801", "00143145805", "00143145810", "00247137004", "00247137060", "00603150858", "00603516521", "00603516532", "00603516602", "00603516616", "00603516620", "00603516621", "00603516622", "00603516632", "00603516721", "00603516732", "00603516821", "00603516832", "16571033016", "49999039430", "49999039460", "49999039490", "49999086700", "51079009501", "51079009520", "54569093800", "54569093801", "54569093802", "54868121901", "54868121902", "54868121903", "54868121904", "54868169800", "54868169802", "54868169803", "54868338100", "55289016597", "55289033701", "55289053501", "55887075730", "58016082606", "58016082650", "61392038232", "61392038245", "61392038251", "61392038254", "61392038256", "61392038291", "61392039145", "61392039154", "61392039156", "61392039191", "61392039230", "61392039231", "61392039232", "61392039239", "61392039245", "61392039251", "61392039254", "61392039260", "61392039290", "61392039291", "63739020010", "63739020110", "63874022312", "63874022348", "63874025420", "64125090101", "64125090110", "64125090201", "64125090210", "64125090301", "64125090310", "64125091501", "64125091510")
  val ndcP1S = ndcP1.toSet
  
  val cptP1 = List("80184")
  val cptP1S = cptP1.toSet
  
  // NDC - phenytoin
  val ndcP2 = List("00071000724", "00071000740", "00071036924", "00071036932", "00071036940", "00071221420", "00071374066", "00247193700", "00247193703", "00247193730", "00247193733", "00247193779", "00378156001", "00378156010", "00378267001", "00378267093", "00378375001", "00378375093", "00378385001", "00378385005", "00472006708", "00472500208", "00472500259", "00472500260", "00904618740", "17856006730", "21695016730", "23490652401", "23490652402", "49999057400", "49999057415", "49999087600", "49999087630", "50268066015", "51079012901", "51079012906", "51079090501", "51079090517", "51079090519", "51079090520", "51079090530", "51079090556", "51079090557", "51672406901", "51672411101", "51672411103", "54569515100", "54868004000", "54868004001", "54868004002", "54868032500", "54868032501", "54868032502", "54868032503", "54868032504", "54868032507", "54868148601", "54868203800", "54868255100", "54868277600", "54868553400", "54868553401", "54868553402", "55045289900", "55045289908", "55045289909", "55289074630", "55289090660", "55887050830", "55887050860", "55887050890", "58016031900", "58016031930", "58016031960", "58016031990", "58016486301", "58864003742", "58864050990", "59762053101", "59762521001", "60432013108", "62756029983", "62756029988", "62756040201", "62756040203", "62756043283", "62756043288", "62794067001", "62794067093", "64679071901", "64679072001", "64679072002", "65162021210", "65162021211", "65162021250", "66267007990", "66336073230", "66336073294", "66689003601", "66689003650", "66993023208", "68084037601", "68084037611", "68084037621", "68094053358")
  val ndcP2S = ndcP2.toSet
  
  val cptP2 = List("80185", "80186")
  val cptP2S = cptP2.toSet
  
  // NDC - valproic
  val ndcV = List("00074568113", "00074568216", "00093963316", "00121067516", "00121467505", "00121467510", "00121467555", "00182175401", "00247181638", "00591042616", "00591401201", "00603184158", "00832100800", "17856062130", "21695041700", "21695041730", "21695041760", "49999032230", "50111085201", "50111085202", "50383079216", "50962022660", "51079029801", "51079029808", "51079029820", "51079029830", "51079029856", "52959067160", "54868168901", "54868168902", "54868168903", "54868428500", "57664012434", "57866447701", "58016008500", "58016008530", "58016008560", "58016008590", "58864082960", "60432062116", "61392015730", "61392015732", "61392015739", "61392015745", "61392015751", "61392015754", "61392015760", "61392015790", "61392015791", "62756087388", "63739025101", "63739025110", "68094019358", "68094019359", "68094019361", "68094019362", "68094070159", "68094070161", "68094070162", "68968312501", "68968325001", "68968350001")
  val ndcVS = ndcV.toSet
  
  val cptV = List("80164")
  val cptVS = cptV.toSet
}

/**
 * Annual Monitoring of Carbamazepine Rule
 *
 */
class MPM_AC_C_Rule(config: RuleConfig, hedisDate: DateTime) extends MPM_RuleBase(MPM_AC.nameC, "Carbamazepine", MPM_AC.ndcC, MPM_AC.ndcCS, config, hedisDate) {

  override def generateMeetMeasureClaims(pl: PersistenceLayer, patient: Patient, provider: Provider): List[Claim] = generateMeetMeasureClaimsA(MPM_AC.cptC, pl, patient, provider)
  override def scorePatientMeetMeasure(scorecard: Scorecard, patient: Patient, ph: PatientHistory): Scorecard = scorePatientMeetMeasureA(MPM_AC.cptCS, scorecard, patient, ph)
}

/**
 * Annual Monitoring of Phenobarbital Rule
 *
 */
class MPM_AC_P1_Rule(config: RuleConfig, hedisDate: DateTime) extends MPM_RuleBase(MPM_AC.nameP1, "Phenobarbital", MPM_AC.ndcP1, MPM_AC.ndcP1S, config, hedisDate) {

  override def generateMeetMeasureClaims(pl: PersistenceLayer, patient: Patient, provider: Provider): List[Claim] = generateMeetMeasureClaimsA(MPM_AC.cptP1, pl, patient, provider)
  override def scorePatientMeetMeasure(scorecard: Scorecard, patient: Patient, ph: PatientHistory): Scorecard = scorePatientMeetMeasureA(MPM_AC.cptP1S, scorecard, patient, ph)
}

/**
 * Annual Monitoring of Phenytoin Rule
 *
 */
class MPM_AC_P2_Rule(config: RuleConfig, hedisDate: DateTime) extends MPM_RuleBase(MPM_AC.nameP2, "Phenytoin", MPM_AC.ndcP2, MPM_AC.ndcP2S, config, hedisDate) {

  override def generateMeetMeasureClaims(pl: PersistenceLayer, patient: Patient, provider: Provider): List[Claim] = generateMeetMeasureClaimsA(MPM_AC.cptP2, pl, patient, provider)
  override def scorePatientMeetMeasure(scorecard: Scorecard, patient: Patient, ph: PatientHistory): Scorecard = scorePatientMeetMeasureA(MPM_AC.cptP2S, scorecard, patient, ph)
}

/**
 * Annual Monitoring of Valproic Rule
 *
 */
class MPM_AC_V_Rule(config: RuleConfig, hedisDate: DateTime) extends MPM_RuleBase(MPM_AC.nameV, "Valproic", MPM_AC.ndcV, MPM_AC.ndcVS, config, hedisDate) {

  override def generateMeetMeasureClaims(pl: PersistenceLayer, patient: Patient, provider: Provider): List[Claim] = generateMeetMeasureClaimsA(MPM_AC.cptV, pl, patient, provider)
  override def scorePatientMeetMeasure(scorecard: Scorecard, patient: Patient, ph: PatientHistory): Scorecard = scorePatientMeetMeasureA(MPM_AC.cptVS, scorecard, patient, ph)
}
